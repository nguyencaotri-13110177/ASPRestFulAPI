#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace APIBookingAirTicket
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="APIBookingAirTicket")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertKeyAPI(KeyAPI instance);
    partial void UpdateKeyAPI(KeyAPI instance);
    partial void DeleteKeyAPI(KeyAPI instance);
    partial void InsertDatCho(DatCho instance);
    partial void UpdateDatCho(DatCho instance);
    partial void DeleteDatCho(DatCho instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["APIBookingAirTicketConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<KeyAPI> KeyAPIs
		{
			get
			{
				return this.GetTable<KeyAPI>();
			}
		}
		
		public System.Data.Linq.Table<DatCho> DatChos
		{
			get
			{
				return this.GetTable<DatCho>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KeyAPI")]
	public partial class KeyAPI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _KeyID;
		
		private string _Loai;
		
		private System.Nullable<System.DateTime> _NgayKichHoat;
		
		private System.Nullable<System.DateTime> _NgayKetThuc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKeyIDChanging(string value);
    partial void OnKeyIDChanged();
    partial void OnLoaiChanging(string value);
    partial void OnLoaiChanged();
    partial void OnNgayKichHoatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayKichHoatChanged();
    partial void OnNgayKetThucChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayKetThucChanged();
    #endregion
		
		public KeyAPI()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyID", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string KeyID
		{
			get
			{
				return this._KeyID;
			}
			set
			{
				if ((this._KeyID != value))
				{
					this.OnKeyIDChanging(value);
					this.SendPropertyChanging();
					this._KeyID = value;
					this.SendPropertyChanged("KeyID");
					this.OnKeyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Loai", DbType="NVarChar(1000)")]
		public string Loai
		{
			get
			{
				return this._Loai;
			}
			set
			{
				if ((this._Loai != value))
				{
					this.OnLoaiChanging(value);
					this.SendPropertyChanging();
					this._Loai = value;
					this.SendPropertyChanged("Loai");
					this.OnLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKichHoat", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayKichHoat
		{
			get
			{
				return this._NgayKichHoat;
			}
			set
			{
				if ((this._NgayKichHoat != value))
				{
					this.OnNgayKichHoatChanging(value);
					this.SendPropertyChanging();
					this._NgayKichHoat = value;
					this.SendPropertyChanged("NgayKichHoat");
					this.OnNgayKichHoatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKetThuc", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayKetThuc
		{
			get
			{
				return this._NgayKetThuc;
			}
			set
			{
				if ((this._NgayKetThuc != value))
				{
					this.OnNgayKetThucChanging(value);
					this.SendPropertyChanging();
					this._NgayKetThuc = value;
					this.SendPropertyChanged("NgayKetThuc");
					this.OnNgayKetThucChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DatCho")]
	public partial class DatCho : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Hang;
		
		private string _MaDatCho;
		
		private System.Nullable<int> _TinhTrangThanhToan;
		
		private System.Nullable<System.DateTime> _TGChoBatDau;
		
		private System.Nullable<System.DateTime> _TGChoKetThuc;
		
		private string _Ten;
		
		private System.Nullable<int> _CMND;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHangChanging(string value);
    partial void OnHangChanged();
    partial void OnMaDatChoChanging(string value);
    partial void OnMaDatChoChanged();
    partial void OnTinhTrangThanhToanChanging(System.Nullable<int> value);
    partial void OnTinhTrangThanhToanChanged();
    partial void OnTGChoBatDauChanging(System.Nullable<System.DateTime> value);
    partial void OnTGChoBatDauChanged();
    partial void OnTGChoKetThucChanging(System.Nullable<System.DateTime> value);
    partial void OnTGChoKetThucChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    partial void OnCMNDChanging(System.Nullable<int> value);
    partial void OnCMNDChanged();
    #endregion
		
		public DatCho()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hang", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Hang
		{
			get
			{
				return this._Hang;
			}
			set
			{
				if ((this._Hang != value))
				{
					this.OnHangChanging(value);
					this.SendPropertyChanging();
					this._Hang = value;
					this.SendPropertyChanged("Hang");
					this.OnHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDatCho", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDatCho
		{
			get
			{
				return this._MaDatCho;
			}
			set
			{
				if ((this._MaDatCho != value))
				{
					this.OnMaDatChoChanging(value);
					this.SendPropertyChanging();
					this._MaDatCho = value;
					this.SendPropertyChanged("MaDatCho");
					this.OnMaDatChoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrangThanhToan", DbType="Int")]
		public System.Nullable<int> TinhTrangThanhToan
		{
			get
			{
				return this._TinhTrangThanhToan;
			}
			set
			{
				if ((this._TinhTrangThanhToan != value))
				{
					this.OnTinhTrangThanhToanChanging(value);
					this.SendPropertyChanging();
					this._TinhTrangThanhToan = value;
					this.SendPropertyChanged("TinhTrangThanhToan");
					this.OnTinhTrangThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TGChoBatDau", DbType="DateTime")]
		public System.Nullable<System.DateTime> TGChoBatDau
		{
			get
			{
				return this._TGChoBatDau;
			}
			set
			{
				if ((this._TGChoBatDau != value))
				{
					this.OnTGChoBatDauChanging(value);
					this.SendPropertyChanging();
					this._TGChoBatDau = value;
					this.SendPropertyChanged("TGChoBatDau");
					this.OnTGChoBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TGChoKetThuc", DbType="DateTime")]
		public System.Nullable<System.DateTime> TGChoKetThuc
		{
			get
			{
				return this._TGChoKetThuc;
			}
			set
			{
				if ((this._TGChoKetThuc != value))
				{
					this.OnTGChoKetThucChanging(value);
					this.SendPropertyChanging();
					this._TGChoKetThuc = value;
					this.SendPropertyChanged("TGChoKetThuc");
					this.OnTGChoKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(100)")]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="Int")]
		public System.Nullable<int> CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
